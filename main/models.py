from django.db import models


class Data(models.Model):
    data_upload_file = models.ForeignKey('UploadedDataFile', on_delete=models.CASCADE)
    organization_name = models.CharField(max_length=255, null=True, blank=True)
    crunchbase_company_url = models.URLField(null=True, blank=True)
    founded_date = models.DateField(null=True, blank=True)
    full_description = models.TextField(null=True, blank=True)
    industries = models.CharField(max_length=255, null=True, blank=True)
    headquarters = models.CharField(max_length=255, null=True, blank=True)
    description = models.TextField(null=True, blank=True)
    cb_rank = models.CharField(max_length=255, null=True, blank=True)
    linkedin = models.URLField(null=True, blank=True)
    facebook = models.URLField(null=True, blank=True)
    last_funding_date = models.DateField(null=True, blank=True)
    number_of_funding = models.PositiveIntegerField(null=True, blank=True)
    funding_status = models.CharField(max_length=255, null=True, blank=True)
    last_equity_funding = models.CharField(max_length=255, null=True, blank=True)
    estimate_revenue = models.CharField(max_length=255, null=True, blank=True)
    operating_status = models.CharField(max_length=255, null=True, blank=True)
    website = models.URLField(null=True, blank=True)
    twitter = models.URLField(null=True, blank=True)
    company_type = models.CharField(max_length=255, null=True, blank=True)
    contact_email = models.EmailField(null=True, blank=True)
    phone_number = models.CharField(max_length=20, null=True, blank=True)
    industry_groups = models.CharField(max_length=255, null=True, blank=True)
    number_of_founders = models.PositiveIntegerField(null=True, blank=True)
    name_of_founder = models.CharField(max_length=255, null=True, blank=True)
    number_of_employees = models.PositiveIntegerField(null=True, blank=True)
    total_funding_amount = models.CharField(max_length=255, null=True, blank=True)
    total_equity_funding = models.CharField(max_length=255, null=True, blank=True)
    last_equity_funding_type = models.CharField(max_length=255, null=True, blank=True)
    top_5_investor = models.CharField(max_length=255, null=True, blank=True)
    acquisition_status = models.CharField(max_length=255, null=True, blank=True)
    number_of_acquisition = models.PositiveIntegerField(null=True, blank=True)
    ipo_status = models.CharField(max_length=255, null=True, blank=True)
    ipo_date = models.DateField(null=True, blank=True)
    money_raised_at_ipo = models.CharField(max_length=255, null=True, blank=True)
    valuation_at_ipo = models.CharField(max_length=255, null=True, blank=True)
    monthly_visits = models.CharField(max_length=255, null=True, blank=True)
    global_traffic_rank = models.PositiveIntegerField(null=True, blank=True)
    exit_date = models.DateField(null=True, blank=True)
    closed_date = models.DateField(null=True, blank=True)
    actively_hiring = models.BooleanField(default=False)
    number_of_investor = models.PositiveIntegerField(null=True, blank=True)
    number_of_lead_investor = models.PositiveIntegerField(null=True, blank=True)
    stock_symbol = models.CharField(max_length=255, null=True, blank=True)
    last_leadership_hiring_date = models.DateField(null=True, blank=True)
    last_layoff_mention_date = models.DateField(null=True, blank=True)
    cb_rank_organization = models.CharField(max_length=255, null=True, blank=True)
    visit_duration = models.CharField(max_length=255, null=True, blank=True)
    bounce_rate = models.CharField(max_length=255, null=True, blank=True)
    patent_granted = models.BooleanField(default=False)
    trademarks_registered = models.BooleanField(default=False)
    it_spend = models.CharField(max_length=255, null=True, blank=True)
    most_recent_valuation_range = models.CharField(max_length=255, null=True, blank=True)
    date_of_most_recent_valuation = models.DateField(null=True, blank=True)
    investor_type = models.CharField(max_length=255, null=True, blank=True)
    investment_stage = models.CharField(max_length=255, null=True, blank=True)
    last_funding_amount = models.CharField(max_length=255, null=True, blank=True)
    headquarters_regions = models.CharField(max_length=255, null=True, blank=True)
    diversity_spotlight = models.CharField(max_length=255, null=True, blank=True)
    number_of_articles = models.PositiveIntegerField(null=True, blank=True)
    number_of_portfolio_organizations = models.PositiveIntegerField(null=True, blank=True)
    number_of_investments = models.PositiveIntegerField(null=True, blank=True)
    number_of_lead_investments = models.PositiveIntegerField(null=True, blank=True)
    number_of_diversity_investments = models.PositiveIntegerField(null=True, blank=True)
    number_of_exits = models.PositiveIntegerField(null=True, blank=True)
    number_of_exits_ipo = models.PositiveIntegerField(null=True, blank=True)
    accelerator_program_type = models.CharField(max_length=255, null=True, blank=True)
    accelerator_application_deadline = models.DateField(null=True, blank=True)
    accelerator_duration_weeks = models.PositiveIntegerField(null=True, blank=True)
    school_type = models.CharField(max_length=255, null=True, blank=True)
    school_program = models.CharField(max_length=255, null=True, blank=True)
    number_of_enrollments = models.PositiveIntegerField(null=True, blank=True)
    school_method = models.CharField(max_length=255, null=True, blank=True)
    number_of_founders_alumni = models.PositiveIntegerField(null=True, blank=True)
    number_of_alumni = models.PositiveIntegerField(null=True, blank=True)
    transaction_name = models.CharField(max_length=255, null=True, blank=True)
    acquired_by = models.CharField(max_length=255, null=True, blank=True)
    announced_date = models.DateField(null=True, blank=True)
    price = models.CharField(max_length=255, null=True, blank=True)
    acquisition_type = models.CharField(max_length=255, null=True, blank=True)
    acquisition_terms = models.CharField(max_length=255, null=True, blank=True)
    number_of_events = models.PositiveIntegerField(null=True, blank=True)
    hub_tags = models.CharField(max_length=255, null=True, blank=True)
    delisted_date = models.DateField(null=True, blank=True)
    stock_exchange = models.CharField(max_length=255, null=True, blank=True)
    cb_rank_school = models.CharField(max_length=255, null=True, blank=True)
    trend_score_7_days = models.FloatField(null=True, blank=True)
    trend_score_30_days = models.FloatField(null=True, blank=True)
    trend_score_90_days = models.FloatField(null=True, blank=True)
    similar_companies = models.CharField(max_length=255, null=True, blank=True)
    contact_job_departments = models.CharField(max_length=255, null=True, blank=True)
    number_of_contacts = models.PositiveIntegerField(null=True, blank=True)
    average_visits_6_months = models.CharField(max_length=255, null=True, blank=True)
    monthly_visits_growth = models.CharField(max_length=255, null=True, blank=True)
    visit_duration_growth = models.CharField(max_length=255, null=True, blank=True)
    page_views_per_visit = models.CharField(max_length=255, null=True, blank=True)
    page_views_per_visit_growth = models.CharField(max_length=255, null=True, blank=True)
    bounce_rate_growth = models.CharField(max_length=255, null=True, blank=True)
    monthly_rank_change = models.IntegerField(null=True, blank=True)
    monthly_rank_growth = models.IntegerField(null=True, blank=True)
    active_tech_count = models.PositiveIntegerField(null=True, blank=True)
    number_of_apps = models.PositiveIntegerField(null=True, blank=True)
    downloads_last_30_days = models.CharField(max_length=255, null=True, blank=True)
    total_products_active = models.PositiveIntegerField(null=True, blank=True)
    most_popular_patent_class = models.CharField(max_length=255, null=True, blank=True)
    most_popular_trademark_class = models.CharField(max_length=255, null=True, blank=True)

    def __str__(self):
        return self.organization_name



class DataUpload(models.Model):
    date = models.DateField(auto_now_add=True)
    name = models.CharField(max_length=255)
    size_of_files = models.CharField(max_length=255, null=True, blank=True)
    number_of_files = models.PositiveIntegerField(null=True, blank=True)
    number_of_rows = models.PositiveIntegerField(null=True, blank=True)
    number_of_columns = models.PositiveIntegerField(null=True, blank=True)

    def __str__(self):
        return self.name



class UploadedDataFile(models.Model):
    data_upload = models.ForeignKey(DataUpload, on_delete=models.CASCADE)
    file = models.FileField(upload_to='uploaded_data_files/')
    processed = models.BooleanField(default=False)

    def __str__(self):
        return str(self.file)
